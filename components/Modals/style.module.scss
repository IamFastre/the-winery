@use '@/styles/funcs.module';
@use '@/styles/consts.module';

.menu {
  min-width: 200px;
  width: fit-content;
  max-width: 80dvw;
  min-height: fit-content;
  animation: birth 500ms ease-in-out;

  > hr {
    width: 100%;
    align-self: stretch;
    margin: 0;

    &::after { content: none; }
  }

  * {
    transition: all 500ms consts.$ease-out-quartic;
  }
}

div.menuContainer {
  padding: 15px;
  gap: 10px;
  align-items: stretch;
}

.header {
  min-height: 24px;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  > h4 {
    margin: 5px 0;
    word-break: keep-all;
    &::before { content: none; }
  }
}

div.option, a.option {
  flex-direction: row;
  align-items: center;
  justify-content: start;
  height: 40px;
  padding: 5px;

  &:not(.field) {
    user-select: none;
    cursor: pointer;
    border-radius: 5px;
    background-color: funcs.set-alpha(var(--secondary), 10%);
  }

  > svg {
    position: relative;
    font-size: 20px;
    fill: var(--primary);
    stroke: var(--primary);
    background-color: var(--accent);
    padding: 5px;
    border-radius: 5px;

    path {
      stroke-width: 40px;
    }

    &.customStrokeWidth {
      path {
        stroke-width: inherit;
      }
    }
  }

  > div {
    flex: 1;
    padding: 0 10px;
    align-items: center;
    justify-content: center;
  }

  &:hover:not(.field), &:focus-visible:not(.field) {
    background-color: funcs.set-alpha(var(--secondary), 15%);
    span {
      font-weight: bold;
    }
  }

  &:active:not(.field), .active:not(.field) {
    background-color: funcs.set-alpha(var(--secondary), 30%);
  }
}

.optionTitle {
  user-select: none;
  font-size: 15px;
}

.optionSubtitle {
  color: var(--secondary);
  font-size: 12px;
  height: 12px;
}

.smallCloseButton {
  position: absolute;
  right: 0;
  cursor: pointer;

  > svg {
    font-size: 24px;
    transition: all 500ms consts.$ease-out-quartic;
    fill: var(--secondary);
    stroke: var(--secondary);
  }

  &:hover, &:focus-visible {
    > svg {
      fill: var(--quinary);
      stroke: var(--quinary);
    }
  }

  &:active, &.active {
    > svg {
      fill: var(--tertiary);
      stroke: var(--tertiary);
    }
  }
}  

.bigCloseButton {
  align-self: stretch;
  padding: 5px 0;
  font-size: smaller;
}  
