@use '@/styles/consts.module';

@mixin isActive($color: var(--accent)) {
  > svg {
    fill: $color;
    stroke: $color;

    &:hover, &:focus-visible {
      fill: var(--none);
      stroke: $color;
    }

    &:active, &.active {
      fill: var(--none);
      stroke: var(--tertiary);
    }
  }
}

@keyframes popUp {
  0% { transform: scale(1); }
  40% { transform: scale(1.25); }
  100% { transform: scale(1); }
}

.container {
  flex-direction: row;
  align-items: center;
  gap: 5px;
  height: 24px;

  > div {
    cursor: pointer;
    transition: all 500ms consts.$ease-out-quartic;
    height: 24px;

    > svg {
      font-size: 24px;
      height: 24px;
      transition: all 500ms consts.$ease-out-quartic;
      fill: var(--none);
      stroke: var(--secondary);
      path { stroke-width: 40px; }
    }

    &:hover, &:focus-visible {
      > svg {
        fill: var(--secondary);
        stroke: var(--secondary);  
      }
    }
  
    &:active, &.active {
      > svg {
        fill: var(--tertiary);
        stroke: var(--tertiary);  
      }
    }  
  }

  &.error {
    opacity: 0.5;
    > div {
      cursor: not-allowed;
      > svg {
        fill: var(--none);
        stroke: var(--red);
      }
    }
  }
}

div.superLike {
  align-items: center;

  > svg {
    &:first-of-type {
      font-size: 14px;
      position: absolute;
      top: -2px;
      stroke: var(--gold);
    }

    &:last-of-type {
      stroke: var(--highlight);
    }
  }

  &:hover, &:focus-visible {
    > svg {
      &:first-of-type {
        fill: var(--primary);
        stroke: var(--gold);
      }
  
      &:last-of-type {
        fill: var(--highlight);
        stroke: var(--highlight);
      }
    }
  }

  &:active, &.active {
    scale: 1.5;
    > svg {
      &:first-of-type {
        fill: var(--gold);
        stroke: var(--primary);
      }
  
      &:last-of-type {
        fill: var(--none);
        stroke: var(--highlight);
      }
    }
  }
}

div.cantSuperLike {
  filter: saturate(0);
  cursor: not-allowed;

  &:hover, &:focus-visible {
    > svg {
      &:first-of-type {
        fill: var(--primary);
        stroke: var(--gold);
      }
  
      &:last-of-type {
        fill: var(--none);
        stroke: var(--highlight);
      }
    }
  }

  &:active, &.active {
    filter: saturate(0);
    scale: 1;

    > svg {
      &:first-of-type {
        fill: var(--primary);
        stroke: var(--gold);
      }
  
      &:last-of-type {
        fill: var(--none);
        stroke: var(--highlight);
      }
    }
  }
}

.count {
  cursor: pointer;
  font-size: 12px;
  user-select: none;
  flex-direction: row;
  gap: 5px;

  > div {
    flex-direction: row;
    gap: 5px;
  }

  > span {
    color: var(--accent);
  }

  &:hover, &:focus-visible {
    text-decoration-color: var(--accent);
    text-decoration-line: underline;
    text-decoration-style: dotted;
  }

  &:active, &.active {
    font-weight: bold;
  }
}

div.isSaved { @include isActive(var(--cold)); }
div.isLiked { @include isActive(var(--hot)); }
div.isSuperLiked {
  filter: drop-shadow(0 0 7.5px var(--highlight));

  > svg {
    &:first-of-type {
      fill: var(--gold);
      stroke: var(--primary);
    }

    &:last-of-type {
      fill: var(--highlight);
      stroke: var(--highlight);
    }
  }

  &:hover, &:focus-visible {
    > svg {
      &:first-of-type {
        fill: var(--primary);
        stroke: var(--gold);
      }
  
      &:last-of-type {
        fill: var(--none);
        stroke: var(--highlight);
      }
    }
  }

  &:active, &.active {
    filter: saturate(0);
    scale: 1;

    > svg {
      &:first-of-type {
        fill: var(--gold);
        stroke: var(--primary);
      }
  
      &:last-of-type {
        fill: var(--none);
        stroke: var(--highlight);
      }
    }
  }
}

.modalSection {
  min-width: fit-content;
  width: 225px;
  max-width: 80%;
  min-height: 150px;
}

.modalSectionContent {
  align-items: stretch;

  hr {
    align-self: center;
    margin: 4px 0;
  }
}

.modalHead {
  align-items: center;
  justify-content: center;
  height: 30px;
  margin: 5px;
  font-size: 18px;

  > span {
    font-weight: bold;
  }
}

.modalCloseButton {
  position: absolute;
  right: 0;
  cursor: pointer;

  > svg {
    font-size: 24px;
    transition: all 500ms consts.$ease-out-quartic;
    fill: var(--secondary);
    stroke: var(--secondary);
  }

  &:hover, &:focus-visible {
    > svg {
      fill: var(--quinary);
      stroke: var(--quinary);
    }
  }

  &:active, &.active {
    > svg {
      fill: var(--tertiary);
      stroke: var(--tertiary);
    }
  }
}

.modalBody {
  flex: 1;
  align-items: center;
  justify-content: center;
  gap: 10px;
  padding: 10px;

  > hr {
    margin: 0;
    border-color: var(--quaternary);
    border-style: dashed;
  }
}

.liker {
  flex-direction: row;
  align-self: stretch;
  align-items: center;
  gap: 10px;
  user-select: none;

  &.super {
    > img {
      outline: var(--gold) dashed 2px;
    }

    .hasDisplayName {
      > span {
        color: var(--highlight);
        filter: drop-shadow(0 0 7px var(--highlight))
                drop-shadow(0 0 8px var(--highlight));

        &::before {
          display: inline-flex;
          content: "âœ±";
          margin-right: 2.5px;
          color: var(--gold);
        }
      }
    }
  }

  > img {
    border-radius: 5px;
  }

  .hasDisplayName {
    > div {
      > a {
        font-size: 12px;
      }
    }  
  }
}

.noLikers {
  flex: 1;
  align-items: center;
  justify-content: center;
  padding: 20px 0;
  gap: 5px;

  > svg {
    font-size: 30px;
    fill: var(--secondary);
    stroke: var(--secondary);
  }

  > span {
    font-size: 14px;
    color: var(--secondary);
    font-style: italic;
  }
}
