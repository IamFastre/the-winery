@use 'funcs.module';
@use 'consts.module';
@use 'colors.module' as c;
@use 'values.module' as v;

@font-face {
  font-family: Cascadia;
  src: url('/static/fonts/CascadiaCode.ttf');
  font-weight: 100 200 300 400 500 600 800 900;
  font-style: normal;
}

@font-face {
  font-family: Cascadia;
  src: url('/static/fonts/CascadiaCode-Italic.ttf');
  font-weight: 100 200 300 400 500 600 800 900;
  font-style: italic;
}

@font-face {
  font-family: Ubuntu;
  src: url('/static/fonts/Ubuntu/Light.ttf');
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: Ubuntu;
  src: url('/static/fonts/Ubuntu/Regular.ttf');
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: Ubuntu;
  src: url('/static/fonts/Ubuntu/Medium.ttf');
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: Ubuntu;
  src: url('/static/fonts/Ubuntu/Bold.ttf');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: Ubuntu;
  src: url('/static/fonts/Ubuntu/Light-Italic.ttf');
  font-weight: 300;
  font-style: italic;
}

@font-face {
  font-family: Ubuntu;
  src: url('/static/fonts/Ubuntu/Regular-Italic.ttf');
  font-weight: 400;
  font-style: italic;
}

@font-face {
  font-family: Ubuntu;
  src: url('/static/fonts/Ubuntu/Medium-Italic.ttf');
  font-weight: 500;
  font-style: italic;
}

@font-face {
  font-family: Ubuntu;
  src: url('/static/fonts/Ubuntu/Bold-Italic.ttf');
  font-weight: 700;
  font-style: italic;
}

@font-face {
  font-family: Micro5;
  src: url('/static/fonts/Micro5.ttf');
  font-weight: 100 200 300 400 500 600 800 900;
  font-style: normal;
}

::selection {
  color: c.$primary;
  background-color: funcs.set-alpha(c.$accent, 80%);
}

:root {
  interpolate-size: allow-keywords;
}

body {
  margin: 0;
  padding: 10px;

  position: absolute;
  display: flex;
  flex-direction: column;

  top: 0;
  bottom: 0;
  right: 0;
  left: 0;

  overflow: hidden;
  background-color: c.$primary;

  font-family: v.$font-stack;
  color: c.$tertiary;
}

// BTW, can you tell I'm a React Native dev?
div {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  position: relative;
  overflow: visible;
}

svg {  
  vertical-align: middle;
}

h1 { font-size: 26px; }
h2 { font-size: 24px; }
h3 { font-size: 22px; }
h4 { font-size: 20px; }
h5 { font-size: 18px; }
h6 { font-size: 16px; }

h1,h2,h3 {
  margin-block-start: 0.6em;
  margin-block-end: 0;

  &::before {
    content: "# ";
    color: c.$accent;
  }
}

h4,h5,h6 {
  margin-block-start: 0.6em;
  margin-block-end: 0;

  &::before {
    content: "§ ";
    color: c.$secondary;
  }
}

p {
  margin-block-start: 0.5em;
  margin-block-end: 0.5em;
}

a {
  color: c.$accent;
  font-style: italic;
  text-decoration-style: dotted;

  &:hover, &:focus-visible {
    font-weight: bolder;
    text-decoration-style: solid;
  }

  &[aria-describedby="footnote-label"] {
    font-style: normal;

    &::before {
      content: "[";
    }
    &::after {
      content: "]";
    }
  }

  &:where([type="wrapper"]) {
    all: unset;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    position: relative;
    overflow: visible;
  }
}

blockquote {
  position: relative;
  font-style: italic;

  margin-block: 0;
  margin-inline: 0;

  padding-inline-start: 10px;
  padding-inline-end: 10px;
  border-radius: 5px;

  background-color: funcs.set-alpha(c.$quaternary, 30%);

  &::before {
    content: "";
    position: absolute;
    left: 0;
    background-color: c.$secondary;
    height: 100%;
    width: 5px;
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;  
  }

  p {
    color: c.$quinary;
  }

  >:nth-child(1) {
    &::before {
      content: "“\00a0";
      color: c.$secondary;
      font-weight: bold;
    }
  }

  >:not(:nth-child(1)) {
    &::before {
      content: "\00a0\00a0";
      color: c.$secondary;
    }
  }

  >:nth-last-child(1) {
    &::after {
      content: "\00a0”";
      color: c.$secondary;
      font-weight: bold;
    }
  }
}

code {
  display: inline-block;
  background-color: c.$quaternary;
  padding: 3px;
  border-radius: 5px;
  font-family: monospace;
}

del {
  * {
    text-decoration: inherit;
  }
}

ul, ol {
  margin-block-start: 0.125em;
  margin-block-end: 0.25em;
  padding-inline-start: 30px;
}


li {
  &::marker {
    color: c.$accent;
  }
}

ol li::marker {
  font-size: 12px;
}

hr {
  width: 100%;
  height: 0;
  border-width: 1px;
  border-style: solid;
  border-color: c.$secondary;
}

table {
  border-spacing: 0;
  border-collapse: collapse;
  align-self: stretch;
  margin-top: 16px;
  margin-bottom: 16px;
  width: max-content;
  max-width: 100%;
  overflow: auto;
  border: 1px solid c.$secondary;
}

tr {
  background-color: c.$quaternary;

  &:nth-child(2n) {
    background-color: c.$primary;
  }
}

th, td {
  padding: 6px 13px;
}

th {
  background-color: c.$primary;
  font-weight: bold;
  border-bottom: 1px solid c.$secondary;
}

td {
  border: 1px dashed c.$secondary;
}

input, textarea {
  background-color: funcs.set-alpha(c.$quaternary, 25%);
  border: none;
  border-radius: 5px;
  border-bottom: 2px c.$accent solid;
  min-height: 30px;
  padding: 0 10px;

  &:where(#span) {
    display: inline;
    background-color: c.$none;
    border: none;
    min-height: initial;
    font-size: inherit;
    font-family: inherit;
    font-weight: inherit;
    font-style: inherit;
    color: inherit;
    padding: 0;
    padding-block: 0;
    padding-inline: 0;
  }
}

/* ========================================================================== */

$rainbow: c.$red, c.$orange, c.$yellow, c.$green, c.$blue, c.$purple;

@keyframes swipe {
  0% { background-position: 150% 0; }
  100% { background-position: 0 0; }
}

.rainbow {
  color: transparent;
  background: linear-gradient(to right, $rainbow, $rainbow, $rainbow);
  -webkit-background-clip: text;
  background-clip: text;
  background-size: 300% 100%;

  &:hover {
    animation: swipe 1.75s linear infinite;
  }
}

@mixin mention($tag-color, $link-color, $link-bg-opacity: 10%, $link-bg-opacity-hover: 20%) {
  font-weight: bold;
  color: $tag-color;
  background-color: funcs.set-alpha($link-color, $link-bg-opacity);
  cursor: pointer;
  border-radius: 4px;
  padding: 2px 4px;

  &:hover, &:focus-visible {
    background-color: funcs.set-alpha($link-color, $link-bg-opacity-hover);
  } 

  a {
    color: $link-color;
    font-style: inherit;
    text-decoration: inherit; 
  }
}

.user-mention { @include mention(c.$quinary, c.$accent); }
.card-mention { @include mention(c.$quinary, c.$highlight, 20%, 35%); }

.card-repost {
  display: inline-flex;
  box-sizing: border-box;
  width: 100%;
  padding: 15px;
  background-color: funcs.set-alpha(c.$highlight, 15%);
  border: 1px solid c.$highlight;
  border-radius: v.$border-radius-1;
  gap: 20px;
  overflow: hidden;

  // It feels out of place, but gonna leave it here
  // &::before {
  //   content: 're:';
  //   font-weight: 100;
  //   position: absolute;
  //   font-size: 69px;
  //   opacity: 0.1;
  //   top: -5px;
  //   left: 10px;
  //   filter: blur(3px);
  // }

  > span {
    font-weight: initial;
  }

  > h1 {
    display: inline-flex;
    position: relative;
    align-self: center;
    margin: 15px 0;

    &::before { content: none; }
    &::after {
      content: '';
      display: flex;
      position: absolute;
      width: 100%;
      height: 2px;
      background-color: c.$highlight;
      bottom: -5px;
    }
  }

  > div:first-of-type { hr::after { content: none; } }

  > div:last-of-type {
    font-weight: initial;
    flex-direction: row;
    align-items: center;
    gap: 15px;

    > img {
      width: 32px;
      height: 32px;
      border-radius: v.$border-radius-2;
    }

    > div:first-of-type {
      flex: 1;

      > span {
        font-size: 16px;
      }

      > div > a {
        font-size: 12px;
      }
    }

    > a:last-of-type {
      transition: all 500ms consts.$ease-out-quartic;
      > svg {
        stroke: c.$accent;
        width: 25px;
        height: 25px;
      }

      &:hover, &:focus-visible { transform: scale(1.2); }
      &:active, &.active { transform: scale(0.8); }
    }
  }
}

/* ========================================================================== */

@media screen and (min-width: 0px)
              and (max-width: 786px) {
  body { font-size: 14px; }
}

@media screen and (min-width: 787px) {
  body { font-size: 16px; }
}

* {
  font-family: inherit;
  color: inherit;

  &:focus {
    outline: none;

    &:focus-visible:not(#NO-SELECT) {
      outline-width: 1px;
      outline-color: c.$accent;
      outline-style: dashed;
    }
  }
}

#NO-SELECT {
  width: 0;
  height: 0;
  z-index: -1;
}
