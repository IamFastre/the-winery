@use '@/styles/consts.module';

@mixin styling($padding-top, $data-font-size, $cards-grid) {
  .section {
    flex: 1;
  }

  .sectionContainer {
    padding: $padding-top 10px 0 10px !important;
    gap: 5px;

    > hr {
      width: calc(100% - 40px);
      overflow: visible;
      display: flex;
      align-items: center;
      justify-content: center;
      border-color: rgba(var(--secondary), 0.5);
      border-radius: 2px;

      &::after {
        content: "<#>";
        display: block;
        color: var(--accent);
        background-color: var(--primary);
        padding-left: 2.5px;
        padding-right: 2.5px;
      }
    }
  }

  .avatarBlur {
    position: absolute;
    align-self: center;
    top: 0;
    user-select: none;
    pointer-events: none;
    filter: blur(30px) opacity(0.35);
  }

  .userBox {
    align-items: center;
    gap: 10px;
  }

  .form {
    width: 80%;
    max-width: 400px;
    align-items: stretch;
    margin: 15px 0 5px 0;
    gap: 5px;

    label {
      display: flex;
      flex-direction: column;
      align-items: stretch;
      gap: 5px;

      input, textarea {
        display: flex;
        height: 30px;
        padding: 2px 5px;
        resize: none;
      }

      textarea {
        height: 60px;
      }
    }

    .maxLength {
      user-select: none;
      align-self: flex-end;
      font-size: 10px;
    }
  }

  .bigIcon {
    svg {
      transform: scale(1.3);
    }
  }

  .avatar {
    border-radius: 7.5%;

    img {
      overflow: hidden;
      border-radius: 7.5%;
    }

    &.editing {
      outline: 2px var(--accent) dashed;
      cursor: pointer;
    }

    .avatarEdit {
      position: absolute;
      align-items: center;
      justify-content: center;  
      background-color: rgba(var(--tertiary), 0.25);
      transition: all 250ms ease-in-out;
      animation: fadeIn 500ms ease-in-out;
      border-radius: 7.5%;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;

      &:hover, &:focus-visible {
        background-color: rgba(var(--tertiary), 0.35);
        .avatarEditIcon {
          outline: 1px var(--primary) dashed;
        }
      }

      &:active, &.active {
        background-color: rgba(var(--tertiary), 0.5);
        .avatarEditIcon {
          background-color: var(--primary);
          outline: 1px var(--accent) dashed;
          svg {
            fill: var(--accent);
            stroke: var(--accent);
          }
        }
      }
    }
    
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .avatarEditIcon {
      position: absolute;
      transition: all 400ms ease-in-out;
      background-color: var(--accent);
      outline: 1px transparent dashed;
      padding: 7.5px;
      border-radius: 25px;

      svg {
        transition: all 400ms ease-in-out;
        font-size: 32px;
        fill: var(--primary);
        stroke: var(--primary);
      }
    }

    .avatarRemoveIcon {
      position: absolute;
      bottom: -10px;
      right: -10px;
      animation: fadeIn 500ms ease-in-out;
      transition: all 400ms ease-in-out;
      background-color: var(--red);
      outline: 1px transparent dashed;
      padding: 5px;
      border-radius: 25px;

      svg {
        transition: all 400ms ease-in-out;
        font-size: 20px;
        fill: var(--tertiary);
        stroke: var(--tertiary);
      }
    }

    input {
      cursor: pointer;
      opacity: 0;
      height: 100%;
      width: 100%;
      padding: 0;
      border: none;
    }
  }

  .textStuff {
    user-select: none;
    align-items: center;
    width: 100%;
    gap: 2.5px;
  }

  .names {
    align-items: center;

    > svg {
      cursor: help;
      display: flex;
      position: absolute;
      left: 100%;
      font-size: 20px;
      fill: var(--yellow);
      stroke: var(--yellow);
      filter: drop-shadow(0 0 7.5px var(--yellow));
    }
    
    > span:nth-of-type(1) {
      line-height: 32px;
      font-size: 32px;
      font-weight: bold;
    }

    > span:nth-of-type(2) {
      font-weight: 200;
      user-select: text;
    }
  }

  .gender {
    flex-direction: row;
    align-items: stretch;
    justify-content: center;
    gap: 2.5px;
    padding: 5px;

    .genderName {
      flex: 1;
    }
  }

  .anniversary {
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 15px;

    input {
      flex: 1;
      text-align: center;
      appearance: textfield;
      -moz-appearance: textfield;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
      }
    }
  }

  .buttonRack {
    align-self: stretch;
    align-items: center;
    justify-content: center;
    flex-direction: row;
    gap: 10px;
  }

  .button {
    $h: 35px;
    height: $h;
    font-size: 14px;

    > :nth-of-type(1) {
      width: $h;
    }
  }

  .dataBox {
    flex: 1;
    align-self: stretch;
    display: grid;
    grid-template-columns: 1fr 18fr 1fr;
    align-items: center;
    justify-items: stretch;
    padding: 0 15px;

    &::before {
      content: "{";
      color: var(--accent);
      justify-self: end;
      font-size: 32px;
    }

    &::after {
      content: "}";
      color: var(--accent);
      justify-self: start;
      font-size: 32px;
    }
  }

  .data {
    user-select: none;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
  }

  .dataItem {
    font-size: $data-font-size;

    &::after {
      content: ", ";
      color: var(--quinary);
    }

    &:nth-last-of-type(1)::after {
      content: none;
    }
  }

  .cardsHolder {
    flex: 1;
    align-items: center;
  }

  .cards {
    display: grid;
    grid-template-columns: $cards-grid;
    justify-items: stretch;
    align-content: start;
    align-items: start;
    position: absolute;
    top: 0;
    bottom: 0;
    overflow-y: scroll;
    padding: 15px;
    gap: 30px;

    > div {
      max-width: calc(100vw - 75px);
      > div:nth-child(1) {
        flex: 1;
      }
    }
  }

  .noCards {
    flex: 1;
    align-items: center;
    justify-content: center;
    gap: 5px;
    user-select: none;

    svg {
      font-size: 50px;
      fill: var(--secondary);
      stroke: var(--secondary);
    }

    span {
      color: var(--secondary);
      font-style: italic;
    }
  }
}

@media screen and (min-width: 0px)
              and (max-width: 786px) {
  @include styling($padding-top: 30px, $data-font-size: 14px, $cards-grid: 1fr);
}

@media screen and (min-width: 787px) {
  @include styling($padding-top: 50px, $data-font-size: 18px, $cards-grid: 1fr 1fr);
}
