@use '@/styles/consts.module';
@use '@/styles/funcs.module';

$arrow-size: 28px;

@mixin styling($small) {
  .sectionContent {
    align-items: center;
    justify-content: center;
    padding: 0;
  }

  .actions {
    z-index: 3;
    overflow: hidden;
    position: absolute;
    transition: all 500ms consts.$ease-out-quartic;
    backdrop-filter: blur(5px);
    background-color: funcs.set-alpha(var(--accent), 10%);
    box-sizing: content-box;
    border: 1px var(--none) solid;
    border-radius: 5px;
    max-height: 30px;
    width: 30px;

    @if ($small) {
      bottom: 15px;
      right: 15px;
    } @else {
      top: 25px;
      left: 15px;
    }

    > div:last-child {
      cursor: pointer;
      position: absolute;

      @if ($small) {
        bottom: 0;
        right: 0;
      } @else {
        top: 0;
        left: 0;
      }
  
      > svg {
        transition: all 500ms consts.$ease-out-quartic;
        font-size: 30px;
        fill: var(--accent);
        stroke: var(--accent);

        > path {
          stroke-width: 50px;
        }
      }
    }

    &.open {
      background-color: funcs.set-alpha(var(--highlight), 15%);
      border: 1px var(--highlight) dashed;
      width: calc(100% - 30px);
      max-height: calc(100% - 80px);

      @if ($small) { bottom: 60px; }

      > div > svg {
        rotate: 135deg;
        fill: var(--hot);
        stroke: var(--hot);
      }

      .actionsContent {
        opacity: 1;
      }
    }

    .actionsContent {
      align-items: center;
      transition: all 500ms consts.$ease-out-quartic;
      opacity: 0;
      width: 100%;
      padding: 10px;
      gap: 5px;

      @if ($small) { margin-bottom: 20px; }
      @else { margin-top: 30px; }  
    }
  }

  .card {
    max-width: calc(100% - 26px);
  }

  .cardSection {
    max-height: calc(80vh - 150px);
    min-width: 200px;
    max-width: 604px;
  }

  .quiver {
    flex-direction: row;
    align-items: center;
    justify-content: center;
    position: absolute;
    bottom: 15px;
    gap: 10px;

    input {
      padding: 0 10px;
      font-size: 28px;
      height: $arrow-size;
      line-height: $arrow-size;
      overflow: hidden;
      text-align: center;
      font-size: 22px;
      user-select: none;

      appearance: textfield;
      -moz-appearance: textfield;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
      }
    }

    > div > svg {
      font-size: $arrow-size;
      transition: all 500ms consts.$ease-out-quartic;
      stroke: var(--quinary);
      fill: var(--quinary);

      path {
        transition: all 500ms consts.$ease-out-quartic;
      }

      &.disabled {
        transform: scale(0.8);
      }

      &:not(.disabled) {
        stroke: var(--accent);
        fill: var(--accent);

        &:hover, &:focus-visible {
          transform: scale(1.2);

          path {
            stroke-width: 80px;
          }
        }

        &:active, &.active {
          transform: scale(0.8);
          &.backArrow { transform: translateX(-15px); }
          &.forwardArrow { transform: translateX(15px); }
        }
      }
    }
  }

  .error {
    text-align: center;

    > :nth-child(1) {
      font-size: 32px;
      font-weight: bold;
      margin-bottom: 10px;

      &::before {
        color: var(--red);
        content: "Ã— ";
      }
    }
  }
}

@media screen and (min-width: 0px)
              and (max-width: 786px) {
  @include styling($small: true);
}

@media screen and (min-width: 787px) {
  @include styling($small: false);
}
