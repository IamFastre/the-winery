@use '@/styles/colors.module';
@use '@/styles/consts.module';

@mixin styling($direction, $icon-size) {
  $size: 0px;
  $image-size: 0px;

  @if $direction == row {
    $size: 80px;
    $image-size: 65px;
  }
  @else {
    $size: 70px;
    $image-size: 50px;
  }

  .body {
    flex: 1;
    flex-direction: $direction;
  }

  .bar {
    @if $direction == row {
      width: $size;
      height: 100%;
    }
    @else {
      width: 100%;
      height: $size;
    }
  }

  .nav {
    flex: 1;
    justify-content: flex-start;
    align-items: center;

    @if $direction == row {
      flex-direction: column;
    }
    @else {
      flex-direction: row;
      padding-left: calc($size / 15);
    }
  }

  .image {
    img {
      width: $image-size;
      height: $image-size;
    }
  }

  .sep {
    background-color: colors.$accent;

    @if $direction == row {
      width: 90%;
      height: 2px;
      margin-top: calc($image-size / 12.5) + 2.5px;
      margin-bottom: calc($image-size / 7.5) + 2.5px;
    }
    @else {
      width: 2px;
      height: 80%;
      margin-left: $image-size * 0.2;
    }
  }

  .icons {
    flex: 1;

    @if $direction == row {
      flex-direction: column;
      gap: calc($icon-size / 3) * 2;
    }
    @else {
      flex-direction: row;
      justify-content: space-around;
    }
  }

  .icon {
    > svg { 
      fill: colors.$quinary;
      stroke: colors.$quinary;
      font-size: $icon-size;
      transition: all 500ms consts.$ease-out-quartic;
    }

    &:hover, &:focus-visible {
      > svg {
        fill: colors.$tertiary;
        stroke: colors.$tertiary;
        transform: scale(1.1);
        filter: drop-shadow(0 0 5px colors.$tertiary);
      }
    }

    &:active, &.active {
      > svg {
        transition: transform 100ms consts.$ease-out-quartic;
        transform: scale(0.8);
      }
    }

    &.current {
      > svg {
        transform: scale(1.1);
        fill: colors.$accent;
        stroke: colors.$accent;
      }

      &:hover, &:focus-visible {
        > svg {
          filter: drop-shadow(0 0 5px colors.$accent);
        }
      }
    }
  }

  .page {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    @if $direction == row {
      left: $size;
    }
    @else {
      bottom: $size;
    }
  }
}

@media screen and (min-width: 0px)
              and (max-width: 786px) {
  @include styling($direction: column-reverse, $icon-size: 35px);
}

@media screen and (min-width: 787px) {
  @include styling($direction: row, $icon-size: 45px);
}
